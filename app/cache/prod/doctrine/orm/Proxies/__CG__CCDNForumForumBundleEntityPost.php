<?php

namespace Proxies\__CG__\CCDNForum\ForumBundle\Entity;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class Post extends \CCDNForum\ForumBundle\Entity\Post implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function getBody()
    {
        $this->__load();
        return parent::getBody();
    }

    public function setBody($body)
    {
        $this->__load();
        return parent::setBody($body);
    }

    public function getCreatedDate()
    {
        $this->__load();
        return parent::getCreatedDate();
    }

    public function setCreatedDate($createdDate)
    {
        $this->__load();
        return parent::setCreatedDate($createdDate);
    }

    public function getEditedDate()
    {
        $this->__load();
        return parent::getEditedDate();
    }

    public function setEditedDate($editedDate)
    {
        $this->__load();
        return parent::setEditedDate($editedDate);
    }

    public function isDeleted()
    {
        $this->__load();
        return parent::isDeleted();
    }

    public function setDeleted($isDeleted)
    {
        $this->__load();
        return parent::setDeleted($isDeleted);
    }

    public function getDeletedDate()
    {
        $this->__load();
        return parent::getDeletedDate();
    }

    public function setDeletedDate($deletedDate)
    {
        $this->__load();
        return parent::setDeletedDate($deletedDate);
    }

    public function getUnlockedDate()
    {
        $this->__load();
        return parent::getUnlockedDate();
    }

    public function setUnlockedDate(\DateTime $datetime)
    {
        $this->__load();
        return parent::setUnlockedDate($datetime);
    }

    public function getUnlockedUntilDate()
    {
        $this->__load();
        return parent::getUnlockedUntilDate();
    }

    public function setUnlockedUntilDate(\DateTime $datetime)
    {
        $this->__load();
        return parent::setUnlockedUntilDate($datetime);
    }

    public function isLocked()
    {
        $this->__load();
        return parent::isLocked();
    }

    public function getTopic()
    {
        $this->__load();
        return parent::getTopic();
    }

    public function setTopic(\CCDNForum\ForumBundle\Entity\Topic $topic = NULL)
    {
        $this->__load();
        return parent::setTopic($topic);
    }

    public function getCreatedBy()
    {
        $this->__load();
        return parent::getCreatedBy();
    }

    public function setCreatedBy(\Symfony\Component\Security\Core\User\UserInterface $createdBy = NULL)
    {
        $this->__load();
        return parent::setCreatedBy($createdBy);
    }

    public function getEditedBy()
    {
        $this->__load();
        return parent::getEditedBy();
    }

    public function setEditedBy(\Symfony\Component\Security\Core\User\UserInterface $editedBy = NULL)
    {
        $this->__load();
        return parent::setEditedBy($editedBy);
    }

    public function getDeletedBy()
    {
        $this->__load();
        return parent::getDeletedBy();
    }

    public function setDeletedBy(\Symfony\Component\Security\Core\User\UserInterface $deletedBy = NULL)
    {
        $this->__load();
        return parent::setDeletedBy($deletedBy);
    }

    public function getUnlockedBy()
    {
        $this->__load();
        return parent::getUnlockedBy();
    }

    public function setUnlockedBy(\Symfony\Component\Security\Core\User\UserInterface $unlockedBy = NULL)
    {
        $this->__load();
        return parent::setUnlockedBy($unlockedBy);
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'body', 'createdDate', 'editedDate', 'isDeleted', 'deletedDate', 'unlockedDate', 'unlockedUntilDate', 'topic', 'createdBy', 'editedBy', 'deletedBy', 'unlockedBy');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}