<?php

namespace Proxies\__CG__\CCDNForum\ForumBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Post extends \CCDNForum\ForumBundle\Entity\Post implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'id', 'body', 'createdDate', 'editedDate', 'isDeleted', 'deletedDate', 'unlockedDate', 'unlockedUntilDate', 'topic', 'createdBy', 'editedBy', 'deletedBy', 'attachment', 'unlockedBy');
        }

        return array('__isInitialized__', 'id', 'body', 'createdDate', 'editedDate', 'isDeleted', 'deletedDate', 'unlockedDate', 'unlockedUntilDate', 'topic', 'createdBy', 'editedBy', 'deletedBy', 'attachment', 'unlockedBy');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Post $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getBody()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBody', array());

        return parent::getBody();
    }

    /**
     * {@inheritDoc}
     */
    public function setBody($body)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBody', array($body));

        return parent::setBody($body);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedDate', array());

        return parent::getCreatedDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedDate($createdDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedDate', array($createdDate));

        return parent::setCreatedDate($createdDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getEditedDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEditedDate', array());

        return parent::getEditedDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setEditedDate($editedDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEditedDate', array($editedDate));

        return parent::setEditedDate($editedDate);
    }

    /**
     * {@inheritDoc}
     */
    public function isDeleted()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isDeleted', array());

        return parent::isDeleted();
    }

    /**
     * {@inheritDoc}
     */
    public function setDeleted($isDeleted)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDeleted', array($isDeleted));

        return parent::setDeleted($isDeleted);
    }

    /**
     * {@inheritDoc}
     */
    public function getDeletedDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDeletedDate', array());

        return parent::getDeletedDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setDeletedDate($deletedDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDeletedDate', array($deletedDate));

        return parent::setDeletedDate($deletedDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getUnlockedDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUnlockedDate', array());

        return parent::getUnlockedDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setUnlockedDate(\DateTime $datetime)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUnlockedDate', array($datetime));

        return parent::setUnlockedDate($datetime);
    }

    /**
     * {@inheritDoc}
     */
    public function getUnlockedUntilDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUnlockedUntilDate', array());

        return parent::getUnlockedUntilDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setUnlockedUntilDate(\DateTime $datetime)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUnlockedUntilDate', array($datetime));

        return parent::setUnlockedUntilDate($datetime);
    }

    /**
     * {@inheritDoc}
     */
    public function isLocked()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isLocked', array());

        return parent::isLocked();
    }

    /**
     * {@inheritDoc}
     */
    public function getTopic()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTopic', array());

        return parent::getTopic();
    }

    /**
     * {@inheritDoc}
     */
    public function setTopic(\CCDNForum\ForumBundle\Entity\Topic $topic = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTopic', array($topic));

        return parent::setTopic($topic);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedBy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedBy', array());

        return parent::getCreatedBy();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedBy(\Symfony\Component\Security\Core\User\UserInterface $createdBy = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedBy', array($createdBy));

        return parent::setCreatedBy($createdBy);
    }

    /**
     * {@inheritDoc}
     */
    public function getEditedBy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEditedBy', array());

        return parent::getEditedBy();
    }

    /**
     * {@inheritDoc}
     */
    public function setEditedBy(\Symfony\Component\Security\Core\User\UserInterface $editedBy = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEditedBy', array($editedBy));

        return parent::setEditedBy($editedBy);
    }

    /**
     * {@inheritDoc}
     */
    public function getDeletedBy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDeletedBy', array());

        return parent::getDeletedBy();
    }

    /**
     * {@inheritDoc}
     */
    public function setDeletedBy(\Symfony\Component\Security\Core\User\UserInterface $deletedBy = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDeletedBy', array($deletedBy));

        return parent::setDeletedBy($deletedBy);
    }

    /**
     * {@inheritDoc}
     */
    public function getUnlockedBy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUnlockedBy', array());

        return parent::getUnlockedBy();
    }

    /**
     * {@inheritDoc}
     */
    public function setUnlockedBy(\Symfony\Component\Security\Core\User\UserInterface $unlockedBy = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUnlockedBy', array($unlockedBy));

        return parent::setUnlockedBy($unlockedBy);
    }

}
